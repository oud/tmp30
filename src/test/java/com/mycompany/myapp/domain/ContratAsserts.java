package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ContratAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratAllPropertiesEquals(Contrat expected, Contrat actual) {
        assertContratAutoGeneratedPropertiesEquals(expected, actual);
        assertContratAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratAllUpdatablePropertiesEquals(Contrat expected, Contrat actual) {
        assertContratUpdatableFieldsEquals(expected, actual);
        assertContratUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratAutoGeneratedPropertiesEquals(Contrat expected, Contrat actual) {
        assertThat(actual)
            .as("Verify Contrat auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratUpdatableFieldsEquals(Contrat expected, Contrat actual) {
        assertThat(actual)
            .as("Verify Contrat relevant properties")
            .satisfies(a -> assertThat(a.getTypeMEG()).as("check typeMEG").isEqualTo(expected.getTypeMEG()))
            .satisfies(a -> assertThat(a.getCodeOffre()).as("check codeOffre").isEqualTo(expected.getCodeOffre()))
            .satisfies(a -> assertThat(a.getDateEffet()).as("check dateEffet").isEqualTo(expected.getDateEffet()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratUpdatableRelationshipsEquals(Contrat expected, Contrat actual) {
        assertThat(actual)
            .as("Verify Contrat relationships")
            .satisfies(a -> assertThat(a.getPmEntreprise()).as("check pmEntreprise").isEqualTo(expected.getPmEntreprise()));
    }
}
